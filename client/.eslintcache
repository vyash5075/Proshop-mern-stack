[{"G:\\Express\\prosh\\client\\src\\index.js":"1","G:\\Express\\prosh\\client\\src\\App.js":"2","G:\\Express\\prosh\\client\\src\\reportWebVitals.js":"3","G:\\Express\\prosh\\client\\src\\components\\Header.js":"4","G:\\Express\\prosh\\client\\src\\components\\Footer.js":"5","G:\\Express\\prosh\\client\\src\\screens\\HomeScreen.js":"6","G:\\Express\\prosh\\client\\src\\products.js":"7","G:\\Express\\prosh\\client\\src\\components\\product.js":"8","G:\\Express\\prosh\\client\\src\\components\\Rating.js":"9","G:\\Express\\prosh\\client\\src\\screens\\ProductScreen.js":"10","G:\\Express\\prosh\\client\\src\\store.js":"11","G:\\Express\\prosh\\client\\src\\reducers\\productReducers.js":"12","G:\\Express\\prosh\\client\\src\\constants\\productConstants.js":"13","G:\\Express\\prosh\\client\\src\\actions\\productActions.js":"14","G:\\Express\\prosh\\client\\src\\components\\loader.js":"15","G:\\Express\\prosh\\client\\src\\components\\message.js":"16","G:\\Express\\prosh\\client\\src\\screens\\cartScreen.js":"17","G:\\Express\\prosh\\client\\src\\reducers\\cartReducers.js":"18","G:\\Express\\prosh\\client\\src\\constants\\cartConstants.js":"19","G:\\Express\\prosh\\client\\src\\actions\\cartActions.js":"20","G:\\Express\\prosh\\client\\src\\reducers\\userReducers.js":"21","G:\\Express\\prosh\\client\\src\\constants\\userConstants.js":"22","G:\\Express\\prosh\\client\\src\\screens\\loginScreen.js":"23","G:\\Express\\prosh\\client\\src\\components\\FormContainer.js":"24","G:\\Express\\prosh\\client\\src\\actions\\userActions.js":"25","G:\\Express\\prosh\\client\\src\\screens\\RegisterScreen.js":"26","G:\\Express\\prosh\\client\\src\\screens\\ProfileScreen.js":"27","G:\\Express\\prosh\\client\\src\\screens\\ShippingScreen.js":"28","G:\\Express\\prosh\\client\\src\\components\\CheckoutSteps.js":"29","G:\\Express\\prosh\\client\\src\\screens\\PaymentScreen.js":"30","G:\\Express\\prosh\\client\\src\\screens\\PlaceOrderScreen.js":"31","G:\\Express\\prosh\\client\\src\\reducers\\orderReducers.js":"32","G:\\Express\\prosh\\client\\src\\constants\\orderConstants.js":"33","G:\\Express\\prosh\\client\\src\\actions\\orderActions.js":"34","G:\\Express\\prosh\\client\\src\\screens\\OrderScreen.js":"35","G:\\Express\\prosh\\client\\src\\screens\\UserListScreen.js":"36","G:\\Express\\prosh\\client\\src\\screens\\UserEditScreen.js":"37","G:\\Express\\prosh\\client\\src\\screens\\ProductListScreen.js":"38","G:\\Express\\prosh\\client\\src\\components\\Paginate.js":"39","G:\\Express\\prosh\\client\\src\\screens\\ProductEditScreen.js":"40"},{"size":598,"mtime":1609826634596,"results":"41","hashOfConfig":"42"},{"size":2267,"mtime":1610199361233,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":2716,"mtime":1610171956673,"results":"45","hashOfConfig":"42"},{"size":634,"mtime":1610036841065,"results":"46","hashOfConfig":"42"},{"size":1339,"mtime":1609859135045,"results":"47","hashOfConfig":"42"},{"size":4931,"mtime":1609691956609,"results":"48","hashOfConfig":"42"},{"size":846,"mtime":1609570719979,"results":"49","hashOfConfig":"42"},{"size":1638,"mtime":1609569595278,"results":"50","hashOfConfig":"42"},{"size":3832,"mtime":1609873632987,"results":"51","hashOfConfig":"42"},{"size":2137,"mtime":1610197942165,"results":"52","hashOfConfig":"42"},{"size":3697,"mtime":1610194899824,"results":"53","hashOfConfig":"42"},{"size":1558,"mtime":1610194804385,"results":"54","hashOfConfig":"42"},{"size":5631,"mtime":1610198506617,"results":"55","hashOfConfig":"42"},{"size":418,"mtime":1609841445480,"results":"56","hashOfConfig":"42"},{"size":256,"mtime":1609833830842,"results":"57","hashOfConfig":"42"},{"size":3871,"mtime":1609873018949,"results":"58","hashOfConfig":"42"},{"size":1186,"mtime":1610042459668,"results":"59","hashOfConfig":"42"},{"size":242,"mtime":1610042319775,"results":"60","hashOfConfig":"42"},{"size":1267,"mtime":1610042416096,"results":"61","hashOfConfig":"42"},{"size":3689,"mtime":1610170996559,"results":"62","hashOfConfig":"42"},{"size":1546,"mtime":1610191904129,"results":"63","hashOfConfig":"42"},{"size":2287,"mtime":1609951370182,"results":"64","hashOfConfig":"42"},{"size":350,"mtime":1609949605276,"results":"65","hashOfConfig":"42"},{"size":6842,"mtime":1610173965668,"results":"66","hashOfConfig":"42"},{"size":3244,"mtime":1609955784756,"results":"67","hashOfConfig":"42"},{"size":5967,"mtime":1610137369836,"results":"68","hashOfConfig":"42"},{"size":2621,"mtime":1610050735351,"results":"69","hashOfConfig":"42"},{"size":1307,"mtime":1610041277149,"results":"70","hashOfConfig":"42"},{"size":1981,"mtime":1610086485207,"results":"71","hashOfConfig":"42"},{"size":5383,"mtime":1610083810757,"results":"72","hashOfConfig":"42"},{"size":3524,"mtime":1610128174493,"results":"73","hashOfConfig":"42"},{"size":1345,"mtime":1610137727223,"results":"74","hashOfConfig":"42"},{"size":4150,"mtime":1610173928930,"results":"75","hashOfConfig":"42"},{"size":7227,"mtime":1610135209015,"results":"76","hashOfConfig":"42"},{"size":2831,"mtime":1610191045866,"results":"77","hashOfConfig":"42"},{"size":3258,"mtime":1610193238827,"results":"78","hashOfConfig":"42"},{"size":4182,"mtime":1610198923043,"results":"79","hashOfConfig":"42"},{"size":784,"mtime":1610198905943,"results":"80","hashOfConfig":"42"},{"size":6199,"mtime":1610199310544,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"pvw62e",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Express\\prosh\\client\\src\\index.js",[],["173","174"],"G:\\Express\\prosh\\client\\src\\App.js",[],"G:\\Express\\prosh\\client\\src\\reportWebVitals.js",[],"G:\\Express\\prosh\\client\\src\\components\\Header.js",[],"G:\\Express\\prosh\\client\\src\\components\\Footer.js",[],"G:\\Express\\prosh\\client\\src\\screens\\HomeScreen.js",["175","176"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/product\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\n//import products from \"../products\";\r\n//use selector is used to select parts of the state\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  //useselector matlab hamne productList Reducer jo ki store me define hai uski state ko access kiya\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest products</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => {\r\n            return (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","G:\\Express\\prosh\\client\\src\\products.js",[],["177","178"],"G:\\Express\\prosh\\client\\src\\components\\product.js",[],"G:\\Express\\prosh\\client\\src\\components\\Rating.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ProductScreen.js",["179"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup varient=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>{product.name}</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews}reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price:${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>Description:{product.description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup varient=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>QTY</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className=\"btn-block\"\r\n                    type=\"button\"\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","G:\\Express\\prosh\\client\\src\\store.js",[],"G:\\Express\\prosh\\client\\src\\reducers\\productReducers.js",[],"G:\\Express\\prosh\\client\\src\\constants\\productConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\productActions.js",[],"G:\\Express\\prosh\\client\\src\\components\\loader.js",[],"G:\\Express\\prosh\\client\\src\\components\\message.js",[],"G:\\Express\\prosh\\client\\src\\screens\\cartScreen.js",["180"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  console.log(location.search);\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is Empty<Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup varient=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      varient=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup varient=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                {/* //accumulator */}\r\n                Subtotal({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","G:\\Express\\prosh\\client\\src\\reducers\\cartReducers.js",["181"],"import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existitem = state.cartItems.find((x) => x.product == item.product);\r\n      if (existitem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existitem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","G:\\Express\\prosh\\client\\src\\constants\\cartConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\cartActions.js",[],"G:\\Express\\prosh\\client\\src\\reducers\\userReducers.js",[],"G:\\Express\\prosh\\client\\src\\constants\\userConstants.js",[],"G:\\Express\\prosh\\client\\src\\screens\\loginScreen.js",[],"G:\\Express\\prosh\\client\\src\\components\\FormContainer.js",[],"G:\\Express\\prosh\\client\\src\\actions\\userActions.js",[],"G:\\Express\\prosh\\client\\src\\screens\\RegisterScreen.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ProfileScreen.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ShippingScreen.js",["182","183","184"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setpostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            onChange={(e) => setpostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","G:\\Express\\prosh\\client\\src\\components\\CheckoutSteps.js",[],"G:\\Express\\prosh\\client\\src\\screens\\PaymentScreen.js",["185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    console.log(e);\r\n    console.log(paymentMethod);\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","G:\\Express\\prosh\\client\\src\\screens\\PlaceOrderScreen.js",["188","189","190"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //price calculation\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      // dispatch({ type: USER_DETAILS_RESET });\r\n      // dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const PlaceOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup varient=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address},{cart.shippingAddress.city},\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method:</strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup varient=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x $ {item.price} = ${\" \"}\r\n                          {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup varient=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={PlaceOrderHandler}\r\n                >\r\n                  Place order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","G:\\Express\\prosh\\client\\src\\reducers\\orderReducers.js",[],"G:\\Express\\prosh\\client\\src\\constants\\orderConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\orderActions.js",["191","192","193","194","195","196"],"G:\\Express\\prosh\\client\\src\\screens\\OrderScreen.js",["197","198","199","200","201"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    if (!order || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    // dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {/* {loadingDeliver && <Loader />} */}\r\n              {/* {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )} */}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","G:\\Express\\prosh\\client\\src\\screens\\UserListScreen.js",["202"],"import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","G:\\Express\\prosh\\client\\src\\screens\\UserEditScreen.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ProductListScreen.js",[],"G:\\Express\\prosh\\client\\src\\components\\Paginate.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ProductEditScreen.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"211","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":13},{"ruleId":"203","replacedBy":"212"},{"ruleId":"205","replacedBy":"213"},{"ruleId":"207","severity":1,"message":"214","line":11,"column":3,"nodeType":"209","messageId":"210","endLine":11,"endColumn":16},{"ruleId":"207","severity":1,"message":"214","line":14,"column":3,"nodeType":"209","messageId":"210","endLine":14,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":15,"column":63,"nodeType":"217","messageId":"218","endLine":15,"endColumn":65},{"ruleId":"207","severity":1,"message":"219","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"220","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":15},{"ruleId":"207","severity":1,"message":"221","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":14},{"ruleId":"207","severity":1,"message":"219","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"220","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":15},{"ruleId":"207","severity":1,"message":"221","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"222","line":4,"column":3,"nodeType":"209","messageId":"210","endLine":4,"endColumn":7},{"ruleId":"207","severity":1,"message":"221","line":15,"column":8,"nodeType":"209","messageId":"210","endLine":15,"endColumn":14},{"ruleId":"207","severity":1,"message":"223","line":15,"column":3,"nodeType":"209","messageId":"210","endLine":15,"endColumn":18},{"ruleId":"207","severity":1,"message":"224","line":16,"column":3,"nodeType":"209","messageId":"210","endLine":16,"endColumn":21},{"ruleId":"207","severity":1,"message":"225","line":17,"column":3,"nodeType":"209","messageId":"210","endLine":17,"endColumn":21},{"ruleId":"207","severity":1,"message":"226","line":18,"column":3,"nodeType":"209","messageId":"210","endLine":18,"endColumn":21},{"ruleId":"207","severity":1,"message":"227","line":19,"column":3,"nodeType":"209","messageId":"210","endLine":19,"endColumn":24},{"ruleId":"207","severity":1,"message":"228","line":20,"column":3,"nodeType":"209","messageId":"210","endLine":20,"endColumn":24},{"ruleId":"207","severity":1,"message":"222","line":10,"column":3,"nodeType":"209","messageId":"210","endLine":10,"endColumn":7},{"ruleId":"207","severity":1,"message":"229","line":11,"column":3,"nodeType":"209","messageId":"210","endLine":11,"endColumn":9},{"ruleId":"207","severity":1,"message":"230","line":32,"column":41,"nodeType":"209","messageId":"210","endLine":32,"endColumn":51},{"ruleId":"231","severity":1,"message":"232","line":67,"column":6,"nodeType":"233","endLine":67,"endColumn":25,"suggestions":"234"},{"ruleId":"207","severity":1,"message":"235","line":74,"column":9,"nodeType":"209","messageId":"210","endLine":74,"endColumn":23},{"ruleId":"231","severity":1,"message":"236","line":27,"column":6,"nodeType":"233","endLine":27,"endColumn":40,"suggestions":"237"},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",["238"],["239"],"'ListGroupItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'Form' is defined but never used.","'ORDER_LIST_FAIL' is defined but never used.","'ORDER_LIST_SUCCESS' is defined but never used.","'ORDER_LIST_REQUEST' is defined but never used.","'ORDER_DELIVER_FAIL' is defined but never used.","'ORDER_DELIVER_SUCCESS' is defined but never used.","'ORDER_DELIVER_REQUEST' is defined but never used.","'Button' is defined but never used.","'successPay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.","ArrayExpression",["240"],"'deliverHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["241"],"no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [dispatch, order, orderId]",{"range":"246","text":"247"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"248","text":"249"},[2074,2093],"[dispatch, order, orderId]",[917,951],"[dispatch, history, successDelete, userInfo]"]