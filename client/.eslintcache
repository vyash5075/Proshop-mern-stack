[{"G:\\Express\\prosh\\client\\src\\index.js":"1","G:\\Express\\prosh\\client\\src\\App.js":"2","G:\\Express\\prosh\\client\\src\\reportWebVitals.js":"3","G:\\Express\\prosh\\client\\src\\components\\Header.js":"4","G:\\Express\\prosh\\client\\src\\components\\Footer.js":"5","G:\\Express\\prosh\\client\\src\\screens\\HomeScreen.js":"6","G:\\Express\\prosh\\client\\src\\products.js":"7","G:\\Express\\prosh\\client\\src\\components\\product.js":"8","G:\\Express\\prosh\\client\\src\\components\\Rating.js":"9","G:\\Express\\prosh\\client\\src\\screens\\ProductScreen.js":"10","G:\\Express\\prosh\\client\\src\\store.js":"11","G:\\Express\\prosh\\client\\src\\reducers\\productReducers.js":"12","G:\\Express\\prosh\\client\\src\\constants\\productConstants.js":"13","G:\\Express\\prosh\\client\\src\\actions\\productActions.js":"14","G:\\Express\\prosh\\client\\src\\components\\loader.js":"15","G:\\Express\\prosh\\client\\src\\components\\message.js":"16","G:\\Express\\prosh\\client\\src\\screens\\cartScreen.js":"17","G:\\Express\\prosh\\client\\src\\reducers\\cartReducers.js":"18","G:\\Express\\prosh\\client\\src\\constants\\cartConstants.js":"19","G:\\Express\\prosh\\client\\src\\actions\\cartActions.js":"20"},{"size":598,"mtime":1609826634596,"results":"21","hashOfConfig":"22"},{"size":762,"mtime":1609854776279,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1301,"mtime":1609570948021,"results":"25","hashOfConfig":"22"},{"size":410,"mtime":1609563512498,"results":"26","hashOfConfig":"22"},{"size":1339,"mtime":1609859135045,"results":"27","hashOfConfig":"22"},{"size":4931,"mtime":1609691956609,"results":"28","hashOfConfig":"22"},{"size":846,"mtime":1609570719979,"results":"29","hashOfConfig":"22"},{"size":1638,"mtime":1609569595278,"results":"30","hashOfConfig":"22"},{"size":3832,"mtime":1609873632987,"results":"31","hashOfConfig":"22"},{"size":838,"mtime":1609859871000,"results":"32","hashOfConfig":"22"},{"size":1058,"mtime":1609840021157,"results":"33","hashOfConfig":"22"},{"size":382,"mtime":1609839685407,"results":"34","hashOfConfig":"22"},{"size":1187,"mtime":1609841460347,"results":"35","hashOfConfig":"22"},{"size":418,"mtime":1609841445480,"results":"36","hashOfConfig":"22"},{"size":256,"mtime":1609833830842,"results":"37","hashOfConfig":"22"},{"size":3871,"mtime":1609873018949,"results":"38","hashOfConfig":"22"},{"size":838,"mtime":1609873210585,"results":"39","hashOfConfig":"22"},{"size":100,"mtime":1609854964942,"results":"40","hashOfConfig":"22"},{"size":777,"mtime":1609873277296,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"pvw62e",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Express\\prosh\\client\\src\\index.js",[],["88","89"],"G:\\Express\\prosh\\client\\src\\App.js",[],"G:\\Express\\prosh\\client\\src\\reportWebVitals.js",[],"G:\\Express\\prosh\\client\\src\\components\\Header.js",[],"G:\\Express\\prosh\\client\\src\\components\\Footer.js",[],"G:\\Express\\prosh\\client\\src\\screens\\HomeScreen.js",["90","91"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/product\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\n//import products from \"../products\";\r\n//use selector is used to select parts of the state\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  //useselector matlab hamne productList Reducer jo ki store me define hai uski state ko access kiya\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest products</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => {\r\n            return (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","G:\\Express\\prosh\\client\\src\\products.js",[],["92","93"],"G:\\Express\\prosh\\client\\src\\components\\product.js",[],"G:\\Express\\prosh\\client\\src\\components\\Rating.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ProductScreen.js",["94"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup varient=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>{product.name}</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews}reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price:${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>Description:{product.description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup varient=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>QTY</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className=\"btn-block\"\r\n                    type=\"button\"\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","G:\\Express\\prosh\\client\\src\\store.js",[],"G:\\Express\\prosh\\client\\src\\reducers\\productReducers.js",[],"G:\\Express\\prosh\\client\\src\\constants\\productConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\productActions.js",[],"G:\\Express\\prosh\\client\\src\\components\\loader.js",[],"G:\\Express\\prosh\\client\\src\\components\\message.js",[],"G:\\Express\\prosh\\client\\src\\screens\\cartScreen.js",["95"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  console.log(location.search);\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is Empty<Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup varient=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      varient=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup varient=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                {/* //accumulator */}\r\n                Subtotal({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","G:\\Express\\prosh\\client\\src\\reducers\\cartReducers.js",["96"],"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existitem = state.cartItems.find((x) => x.product == item.product);\r\n      if (existitem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existitem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","G:\\Express\\prosh\\client\\src\\constants\\cartConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\cartActions.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":13},{"ruleId":"97","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","severity":1,"message":"108","line":11,"column":3,"nodeType":"103","messageId":"104","endLine":11,"endColumn":16},{"ruleId":"101","severity":1,"message":"108","line":14,"column":3,"nodeType":"103","messageId":"104","endLine":14,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":7,"column":63,"nodeType":"111","messageId":"112","endLine":7,"endColumn":65},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",["113"],["114"],"'ListGroupItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]