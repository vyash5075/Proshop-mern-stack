[{"G:\\Express\\prosh\\client\\src\\index.js":"1","G:\\Express\\prosh\\client\\src\\App.js":"2","G:\\Express\\prosh\\client\\src\\reportWebVitals.js":"3","G:\\Express\\prosh\\client\\src\\components\\Header.js":"4","G:\\Express\\prosh\\client\\src\\components\\Footer.js":"5","G:\\Express\\prosh\\client\\src\\screens\\HomeScreen.js":"6","G:\\Express\\prosh\\client\\src\\products.js":"7","G:\\Express\\prosh\\client\\src\\components\\product.js":"8","G:\\Express\\prosh\\client\\src\\components\\Rating.js":"9","G:\\Express\\prosh\\client\\src\\screens\\ProductScreen.js":"10","G:\\Express\\prosh\\client\\src\\store.js":"11","G:\\Express\\prosh\\client\\src\\reducers\\productReducers.js":"12","G:\\Express\\prosh\\client\\src\\constants\\productConstants.js":"13","G:\\Express\\prosh\\client\\src\\actions\\productActions.js":"14","G:\\Express\\prosh\\client\\src\\components\\loader.js":"15","G:\\Express\\prosh\\client\\src\\components\\message.js":"16","G:\\Express\\prosh\\client\\src\\screens\\cartScreen.js":"17","G:\\Express\\prosh\\client\\src\\reducers\\cartReducers.js":"18","G:\\Express\\prosh\\client\\src\\constants\\cartConstants.js":"19","G:\\Express\\prosh\\client\\src\\actions\\cartActions.js":"20","G:\\Express\\prosh\\client\\src\\reducers\\userReducers.js":"21","G:\\Express\\prosh\\client\\src\\constants\\userConstants.js":"22","G:\\Express\\prosh\\client\\src\\screens\\loginScreen.js":"23","G:\\Express\\prosh\\client\\src\\components\\FormContainer.js":"24","G:\\Express\\prosh\\client\\src\\actions\\userActions.js":"25","G:\\Express\\prosh\\client\\src\\screens\\RegisterScreen.js":"26","G:\\Express\\prosh\\client\\src\\screens\\ProfileScreen.js":"27","G:\\Express\\prosh\\client\\src\\screens\\ShippingScreen.js":"28","G:\\Express\\prosh\\client\\src\\components\\CheckoutSteps.js":"29","G:\\Express\\prosh\\client\\src\\screens\\PaymentScreen.js":"30","G:\\Express\\prosh\\client\\src\\screens\\PlaceOrderScreen.js":"31","G:\\Express\\prosh\\client\\src\\reducers\\orderReducers.js":"32","G:\\Express\\prosh\\client\\src\\constants\\orderConstants.js":"33","G:\\Express\\prosh\\client\\src\\actions\\orderActions.js":"34"},{"size":598,"mtime":1609826634596,"results":"35","hashOfConfig":"36"},{"size":1500,"mtime":1610045044851,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":2080,"mtime":1609953834823,"results":"39","hashOfConfig":"36"},{"size":634,"mtime":1610036841065,"results":"40","hashOfConfig":"36"},{"size":1339,"mtime":1609859135045,"results":"41","hashOfConfig":"36"},{"size":4931,"mtime":1609691956609,"results":"42","hashOfConfig":"36"},{"size":846,"mtime":1609570719979,"results":"43","hashOfConfig":"36"},{"size":1638,"mtime":1609569595278,"results":"44","hashOfConfig":"36"},{"size":3832,"mtime":1609873632987,"results":"45","hashOfConfig":"36"},{"size":1669,"mtime":1610049265688,"results":"46","hashOfConfig":"36"},{"size":1058,"mtime":1609840021157,"results":"47","hashOfConfig":"36"},{"size":382,"mtime":1609839685407,"results":"48","hashOfConfig":"36"},{"size":1207,"mtime":1609946979771,"results":"49","hashOfConfig":"36"},{"size":418,"mtime":1609841445480,"results":"50","hashOfConfig":"36"},{"size":256,"mtime":1609833830842,"results":"51","hashOfConfig":"36"},{"size":3871,"mtime":1609873018949,"results":"52","hashOfConfig":"36"},{"size":1186,"mtime":1610042459668,"results":"53","hashOfConfig":"36"},{"size":242,"mtime":1610042319775,"results":"54","hashOfConfig":"36"},{"size":1267,"mtime":1610042416096,"results":"55","hashOfConfig":"36"},{"size":2200,"mtime":1610008308085,"results":"56","hashOfConfig":"36"},{"size":933,"mtime":1610008276178,"results":"57","hashOfConfig":"36"},{"size":2287,"mtime":1609951370182,"results":"58","hashOfConfig":"36"},{"size":350,"mtime":1609949605276,"results":"59","hashOfConfig":"36"},{"size":3908,"mtime":1610008441825,"results":"60","hashOfConfig":"36"},{"size":3244,"mtime":1609955784756,"results":"61","hashOfConfig":"36"},{"size":4173,"mtime":1610006800171,"results":"62","hashOfConfig":"36"},{"size":2621,"mtime":1610050735351,"results":"63","hashOfConfig":"36"},{"size":1307,"mtime":1610041277149,"results":"64","hashOfConfig":"36"},{"size":1981,"mtime":1610086485207,"results":"65","hashOfConfig":"36"},{"size":5383,"mtime":1610083810757,"results":"66","hashOfConfig":"36"},{"size":656,"mtime":1610049192540,"results":"67","hashOfConfig":"36"},{"size":1286,"mtime":1610048982938,"results":"68","hashOfConfig":"36"},{"size":1194,"mtime":1610082719901,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"pvw62e",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Express\\prosh\\client\\src\\index.js",[],["146","147"],"G:\\Express\\prosh\\client\\src\\App.js",[],"G:\\Express\\prosh\\client\\src\\reportWebVitals.js",[],"G:\\Express\\prosh\\client\\src\\components\\Header.js",[],"G:\\Express\\prosh\\client\\src\\components\\Footer.js",[],"G:\\Express\\prosh\\client\\src\\screens\\HomeScreen.js",["148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/product\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\n//import products from \"../products\";\r\n//use selector is used to select parts of the state\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  //useselector matlab hamne productList Reducer jo ki store me define hai uski state ko access kiya\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest products</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => {\r\n            return (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","G:\\Express\\prosh\\client\\src\\products.js",[],["150","151"],"G:\\Express\\prosh\\client\\src\\components\\product.js",[],"G:\\Express\\prosh\\client\\src\\components\\Rating.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ProductScreen.js",["152"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup varient=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>{product.name}</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews}reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price:${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>Description:{product.description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup varient=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>QTY</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className=\"btn-block\"\r\n                    type=\"button\"\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","G:\\Express\\prosh\\client\\src\\store.js",[],"G:\\Express\\prosh\\client\\src\\reducers\\productReducers.js",[],"G:\\Express\\prosh\\client\\src\\constants\\productConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\productActions.js",[],"G:\\Express\\prosh\\client\\src\\components\\loader.js",[],"G:\\Express\\prosh\\client\\src\\components\\message.js",[],"G:\\Express\\prosh\\client\\src\\screens\\cartScreen.js",["153"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  console.log(location.search);\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is Empty<Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup varient=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      varient=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup varient=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                {/* //accumulator */}\r\n                Subtotal({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","G:\\Express\\prosh\\client\\src\\reducers\\cartReducers.js",["154"],"import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existitem = state.cartItems.find((x) => x.product == item.product);\r\n      if (existitem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existitem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","G:\\Express\\prosh\\client\\src\\constants\\cartConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\cartActions.js",[],"G:\\Express\\prosh\\client\\src\\reducers\\userReducers.js",[],"G:\\Express\\prosh\\client\\src\\constants\\userConstants.js",[],"G:\\Express\\prosh\\client\\src\\screens\\loginScreen.js",[],"G:\\Express\\prosh\\client\\src\\components\\FormContainer.js",[],"G:\\Express\\prosh\\client\\src\\actions\\userActions.js",[],"G:\\Express\\prosh\\client\\src\\screens\\RegisterScreen.js",[],"G:\\Express\\prosh\\client\\src\\screens\\ProfileScreen.js",["155","156"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n//import { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  console.log(user);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  //   const orderListMy = useSelector((state) => state.orderListMy);\r\n  //   const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        // dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","G:\\Express\\prosh\\client\\src\\screens\\ShippingScreen.js",["157","158","159"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setpostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            onChange={(e) => setpostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","G:\\Express\\prosh\\client\\src\\components\\CheckoutSteps.js",[],"G:\\Express\\prosh\\client\\src\\screens\\PaymentScreen.js",["160","161","162"],"G:\\Express\\prosh\\client\\src\\screens\\PlaceOrderScreen.js",["163","164","165"],"G:\\Express\\prosh\\client\\src\\reducers\\orderReducers.js",[],"G:\\Express\\prosh\\client\\src\\constants\\orderConstants.js",[],"G:\\Express\\prosh\\client\\src\\actions\\orderActions.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"174","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"166","replacedBy":"175"},{"ruleId":"168","replacedBy":"176"},{"ruleId":"170","severity":1,"message":"177","line":11,"column":3,"nodeType":"172","messageId":"173","endLine":11,"endColumn":16},{"ruleId":"170","severity":1,"message":"177","line":14,"column":3,"nodeType":"172","messageId":"173","endLine":14,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":15,"column":63,"nodeType":"180","messageId":"181","endLine":15,"endColumn":65},{"ruleId":"170","severity":1,"message":"182","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":15},{"ruleId":"170","severity":1,"message":"183","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":23},{"ruleId":"170","severity":1,"message":"184","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"185","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":15},{"ruleId":"170","severity":1,"message":"186","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":14},{"ruleId":"170","severity":1,"message":"184","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"185","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":15},{"ruleId":"170","severity":1,"message":"186","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"187","line":4,"column":3,"nodeType":"172","messageId":"173","endLine":4,"endColumn":7},{"ruleId":"170","severity":1,"message":"186","line":15,"column":8,"nodeType":"172","messageId":"173","endLine":15,"endColumn":14},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",["188"],["189"],"'ListGroupItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'useEffect' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]